name: Create Release

on:
  workflow_dispatch:
    inputs:
      newVersionNumber:
        type: string
        description: New version number
        required: true

env:
  SDK_VERSION: ${{ github.event.inputs.newVersionNumber }}

jobs:
  release_python:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TWINE_USERNAME: ${{ secrets.PYTHON_PYPI_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.PYTHON_PYPI_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.MAFGE_PAT }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Copy required files and install dependencies
        working-directory: python/sdk
        run: |
          cp ../dev-toolkit/distribution/** .
          cp ../dev-toolkit/distribution/.bumpversion.cfg .
          cp ../../LICENSE .
          cp ../README.md .
          pip install -r build-requirements.txt
      - name: Build SP-API Python SDK
        working-directory: python/sdk
        run: |
          ls
          bump2version --new-version ${{ github.event.inputs.newVersionNumber }} --allow-dirty --no-tag patch
          python -m build
      - name: Copy back and commit version files
        run: |
          # Copy the updated files back to dev-toolkit/distribution
          cp python/sdk/.bumpversion.cfg python/dev-toolkit/distribution/
          cp python/sdk/pyproject.toml python/dev-toolkit/distribution/
          
          # Set identity
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Persist new version
          git add python/dev-toolkit/distribution/.bumpversion.cfg python/dev-toolkit/distribution/pyproject.toml
          git commit -m "chore: bump python version to ${{ github.event.inputs.newVersionNumber }}"
          git push
      - name: Publish to PyPI
        working-directory: python/sdk
        run: python -m twine upload dist/*
